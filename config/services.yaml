# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'
    app_locales: en|es
    
    app.path.company_logo: /uploads/company/logo
    app.path.user_avatar: /uploads/user/avatar
    app.path.company.services.logo: /uploads/company/services/logo
    app.path.company_video: /uploads/company/video

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $locales: '%app_locales%'
            $defaultLocale: '%locale%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Event\TimestampableModel:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
    App\Event\DumpChanges:
        tags:
            - {name: doctrine.event_listener, event: onFlush }
    # Http Doctrine Filter --------------------------------------------------------
    App\HttpDoctrineFilter\Filter:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@validator'
# END Http Doctrine Filter ----------------------------------------------------
    App\Command\ChatSocketCommand:
        tags:
            - { name: 'console.command', command: 'socket:start:chat' }

    app.contact.chat:
        class: App\Service\ContactChatService
        public: true
        arguments: 
          - '@doctrine.orm.entity_manager'
    
    app.form.registration:
        class: App\Form\RegistrationFormType
        tags:
            - { name: form.type, alias: app_user_registration }